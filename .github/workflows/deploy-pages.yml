name: Deploy GitHub Pages

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'kdp_generator/**'
      - 'requirements.txt'
      - 'README.md'
      - '.github/workflows/deploy-pages.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build PDF outputs
        run: |
          mkdir -p docs/outputs
          python -m kdp_generator.cli crossword --lang en --trim 8.5x11 --out docs/outputs/crossword_en.pdf
          python -m kdp_generator.cli crossword --lang pl --trim 8.5x11 --out docs/outputs/crossword_pl.pdf
          python -m kdp_generator.cli sudoku --difficulty easy --pages 5 --trim 8.5x11 --out docs/outputs/sudoku_easy.pdf
          python -m kdp_generator.cli sudoku --difficulty medium --pages 5 --trim 8.5x11 --out docs/outputs/sudoku_medium.pdf
          python -m kdp_generator.cli coloring --kind geometric --pages 20 --trim 8.5x11 --out docs/outputs/coloring_geometric.pdf
          python -m kdp_generator.cli coloring --kind mandala --pages 20 --trim 8.5x11 --out docs/outputs/coloring_mandala.pdf
          python -m kdp_generator.cli coloring --kind kids --pages 20 --trim 8.5x11 --out docs/outputs/coloring_kids.pdf
          python -m kdp_generator.cli coloring --kind infant --pages 12 --trim 8.5x11 --out docs/outputs/coloring_infant.pdf
          python -m kdp_generator.cli notebook --title "Simple Lined Notebook" --style lined --pages 120 --trim 6x9 --out docs/outputs/notebook_lined.pdf
          python -m kdp_generator.cli notebook --title "Simple Dotted Journal" --style dotted --pages 120 --trim 6x9 --out docs/outputs/notebook_dotted.pdf
          python -m kdp_generator.cli notebook --title "Simple Blank Sketchbook" --style blank --pages 120 --trim 6x9 --out docs/outputs/notebook_blank.pdf
          python -m kdp_generator.cli multiplication --upto 12 --trim 8.5x11 --out docs/outputs/multiplication_12.pdf
          python -m kdp_generator.cli arithmetic --problems 80 --max 30 --trim 8.5x11 --out docs/outputs/arithmetic_easy.pdf
          python -m kdp_generator.cli wordsearch --lang en --size 14 --trim 8.5x11 --out docs/outputs/wordsearch_en.pdf
          python -m kdp_generator.cli wordsearch --lang pl --size 14 --trim 8.5x11 --out docs/outputs/wordsearch_pl.pdf
          python -m kdp_generator.cli maze --size 21 --trim 8.5x11 --out docs/outputs/maze_21.pdf
          python -m kdp_generator.cli graph --spacing 0.25 --trim 8.5x11 --out docs/outputs/graph_025.pdf
          python -m kdp_generator.cli isometric --side 0.25 --trim 8.5x11 --out docs/outputs/isometric_025.pdf
          python -m kdp_generator.cli music --staves 8 --trim 8.5x11 --out docs/outputs/music_8.pdf
          python -m kdp_generator.cli dots --pages 10 --points 40 --trim 8.5x11 --out docs/outputs/dots_40.pdf
          python -m kdp_generator.cli tracing --pages 6 --text ABCDEFGHIJKLMNOPQRSTUVWXYZ --trim 8.5x11 --out docs/outputs/tracing_abc.pdf
          python -m kdp_generator.cli calendar --trim 8.5x11 --out docs/outputs/calendar_current.pdf
          python -m kdp_generator.cli weekly --trim 8.5x11 --out docs/outputs/weekly_planner.pdf
          python -m kdp_generator.cli grid --title "Grid Notebook" --pages 120 --spacing 18 --trim 6x9 --out docs/outputs/grid_notebook.pdf
          python -m kdp_generator.cli bujo --title "Bullet Journal" --pages 120 --spacing 18 --trim 6x9 --out docs/outputs/bullet_journal.pdf
          python -m kdp_generator.cli daily --pages 90 --trim 8.5x11 --out docs/outputs/daily_planner.pdf
          python -m kdp_generator.cli monthly_planner --months 12 --trim 8.5x11 --out docs/outputs/monthly_planner.pdf
          python -m kdp_generator.cli habit --pages 12 --habits 12 --trim 8.5x11 --out docs/outputs/habit_tracker.pdf
          python -m kdp_generator.cli budget --pages 12 --trim 8.5x11 --out docs/outputs/budget_planner.pdf
          python -m kdp_generator.cli recipe --pages 100 --trim 8.5x11 --out docs/outputs/recipe_book.pdf
          python -m kdp_generator.cli herbarium --leaves Maple Oak Birch Chestnut Willow --trim 8.5x11 --out docs/outputs/herbarium.pdf
          python -m kdp_generator.cli wedding --pages 12 --trim 8.5x11 --out docs/outputs/wedding_planner.pdf
          python -m kdp_generator.cli teacher --weeks 12 --trim 8.5x11 --out docs/outputs/teacher_planner.pdf
          python -m kdp_generator.cli travel --trips 3 --days 5 --trim 6x9 --out docs/outputs/travel_journal.pdf
          python -m kdp_generator.cli gratitude --weeks 12 --trim 6x9 --out docs/outputs/gratitude_journal.pdf
          python -m kdp_generator.cli reading --entries 60 --trim 6x9 --out docs/outputs/reading_log.pdf
          python -m kdp_generator.cli meal_weekly --weeks 12 --trim 8.5x11 --out docs/outputs/meal_weekly_planner.pdf

      - name: Build extra 100+ presets
        run: |
          python -m kdp_generator.presets

      - name: Generate outputs index
        run: |
          python - << 'PY'
          import os, html
          root = 'docs/outputs'
          files = sorted([f for f in os.listdir(root) if f.lower().endswith('.pdf')])
          with open(os.path.join(root,'index.html'),'w') as f:
              f.write('<!doctype html><html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><title>Outputs Index</title><link rel="stylesheet" href="../assets/style.css"></head><body><div class="container"><div class="header"><div class="logo"></div><div><div class="title">Outputs Index</div><div class="subtitle">Wygenerowane PDF (pe≈Çna lista)</div></div></div><div class="grid">')
              for name in files:
                  f.write('<div class="card"><a class="button" href="'+ html.escape(name) +'">'+ html.escape(name) +'</a></div>')
              f.write('</div></div></body></html>')
          PY

      - name: Preflight checks (PDF sizes/pagecount)
        run: |
          python - << 'PY'
          from pypdf import PdfReader
          import os, sys
          def check(path, min_pages=24):
              try:
                  r = PdfReader(path)
                  if r.is_encrypted:
                      print('Encrypted not allowed:', path)
                      return False
                  n = len(r.pages)
                  if n < min_pages:
                      print('Too few pages:', path, n)
                      return False
                  return True
              except Exception as e:
                  print('Invalid PDF:', path, e)
                  return False
          ok = True
          root = 'docs/outputs'
          for f in ['notebook_lined.pdf','bullet_journal.pdf','grid_notebook.pdf','daily_planner.pdf','monthly_planner.pdf']:
              p = os.path.join(root,f)
              if os.path.exists(p):
                  ok = check(p, 24) and ok
          if not ok:
              sys.exit(1)
          PY

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4